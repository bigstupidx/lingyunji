// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientProto/Module/Module.proto

using wProtobuf;
using System.Collections;
using System.Collections.Generic;
using wProtobufRPC = wProtobuf.RPC;
using RPCILocalCall = wProtobuf.RPC.ILocalCall;
using RPCIRemoteCall = wProtobuf.RPC.IRemoteCall;

namespace NetProto
{
    public class ModuleData : IMessage
    {
        public ModuleType type = ModuleType.MT_Null;
        public ByteString data = null;
        public int CalculateSize()
        {
            int _total_size_ = 0;
            if (type != ModuleType.MT_Null)
            {
                _total_size_ += 1 + ComputeSize.ComputeEnumSize((int)type);
            }
            if (data != null && data.Length != 0)
            {
                _total_size_ += 1 + ComputeSize.ComputeBytesSize(data);
            }
            return _total_size_;
        }
        public void WriteTo(IWriteStream output)
        {
            if (type != ModuleType.MT_Null)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)type);
            }
            if (data != null && data.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteBytes(data);
            }
        }
        public void MergeFrom(IReadStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch(tag)
                {
                case 8:
                    {
                        type = (ModuleType)input.ReadEnum();
                    }
                    break;
                case 18:
                    {
                        data = input.ReadBytes();
                    }
                    break;
                default:
                    input.SkipLastField(tag);
                    break;
                }
            }
        }
    }
    public class ModuleSyncRequest
    {
        public ModuleSyncRequest(RPCILocalCall l)
        {
            local = l;
        }
        RPCILocalCall local;
        public void ClientRequest(Int32 input, System.Action<wProtobuf.RPC.Error, ModuleData> onEnd)
        {
            local.Call("ModuleSync.ClientRequest", input, onEnd);
        }
        public wProtobufRPC.IYieldResult<ModuleData> ClientRequestYield(Int32 input)
        {
            wProtobufRPC.IYieldResult<ModuleData> info = wProtobufRPC.YieldFactory.Create<ModuleData>();
            ClientRequest(input, info.OnEnd);
            return info;
        }
    }
    public abstract class ModuleSyncRespone
    {
        public ModuleSyncRespone(RPCIRemoteCall r)
        {
            r.Reg<Int32, ModuleData>("ModuleSync.ClientRequest", OnClientRequest);
        }

        protected abstract ModuleData OnClientRequest(Int32 input);
        public static void Reg(RPCIRemoteCall r, IModuleSyncRespone respone)
        {
            r.Reg<Int32, ModuleData>("ModuleSync.ClientRequest", respone.OnClientRequest);
        }
    }
    public interface IModuleSyncRespone
    {
        ModuleData OnClientRequest(Int32 input);
    }
}
